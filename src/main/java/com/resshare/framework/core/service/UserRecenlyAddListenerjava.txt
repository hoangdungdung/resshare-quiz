package com.resshare.framework.core.service;

import java.util.HashMap;

import com.google.firebase.database.DataSnapshot;
import com.google.firebase.database.DatabaseError;
import com.google.firebase.database.FirebaseDatabase;
import com.google.firebase.database.ValueEventListener;
import com.google.gson.Gson;

public class UserRecenlyAddListener extends ListenerBase {
	//DataSnapshot defaultApp;
	Gson gson = new Gson();

	@Override
	public void onChildAdded(DataSnapshot snapshot1, String previousChildName) {
		try {
			if (snapshot1.child("processing").getValue() == null) {

				try {

					String user_id = snapshot1.child("user_id").getValue(String.class);
					String applicationAddNew = snapshot1.child("application").getValue(String.class);
					HashMap hm = new HashMap<>();
					hm.put("0", applicationAddNew);
					;
					String reference = FireBaseReference.user_app_recently + "/" + user_id;
					FirebaseDatabase.getInstance().getReference(reference)
							.addListenerForSingleValueEvent(new ValueEventListener() {

								@Override
								public void onDataChange(DataSnapshot snapshot) {
									if (snapshot.exists()) {
										try {

											int i = 0;
											int j = 1;

											if (snapshot.hasChildren()) {

												for (DataSnapshot iterable_element : snapshot.getChildren()) {
													if (i < 4) {
														String application = iterable_element.getValue(String.class);
														if (!applicationAddNew.endsWith(application)) {
															hm.put(String.valueOf(j), application);
															j++;
															i++;
														}

													}
												}
											}
											// HashMap hm1=new HashMap<>();
											// hm1.put(key, value)
											//
											FirebaseDatabase.getInstance()
													.getReference(FireBaseReference.user_app_recently).child(user_id)
													.setValue(hm);

										} catch (Exception e) {
											e.printStackTrace();
										}
									} else {
										FirebaseDatabase.getInstance()
										.getReference(FireBaseReference.user_app_recently).child(user_id)
										.setValue(hm);

									}

								}

								@Override
								public void onCancelled(DatabaseError error) {
									// TODO Auto-generated method stub

								}
							});

				} catch (Exception e) {
					e.printStackTrace();
				}

				FirebaseDatabase.getInstance().getReference(getReferenceName()).child(snapshot1.getKey())
						.child("processing").setValue("done");
			}
		} catch (Exception e) {
			e.printStackTrace();
		}
	}

	@Override
	public void onChildChanged(DataSnapshot snapshot, String previousChildName) {
		// TODO Auto-generated method stub

	}

	@Override
	public void onChildRemoved(DataSnapshot snapshot) {
		// TODO Auto-generated method stub

	}

	@Override
	public void onChildMoved(DataSnapshot snapshot, String previousChildName) {
		// TODO Auto-generated method stub

	}

	@Override
	public void onCancelled(DatabaseError error) {
		// TODO Auto-generated method stub

	}

	@Override
	public String getReferenceName() {
		// TODO Auto-generated method stub
		return FireBaseReference.draft_user_app_recently;
	}
}
